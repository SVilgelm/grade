name: Release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  milestone:
    types: [closed]
env:
  GO: 1.14.x

jobs:
  bump-version:
    if: github.event_name == 'milestone'
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_TOKEN }}
      - name: Configure Git
        run: |
          git config user.name "sv-tools-bot"
          git config user.email "sv.go.tools@gmail.com"
          git fetch --all
          git describe --tags --abbrev=0
      - name: Create Tag
        run: |
          docker run --rm -v $PWD:/mount -w /mount svtools/bumptag:latest ${{ github.event.milestone.title }}
      - name: Push Tag
        run: git push origin --tags
  build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare gpg
        run: |
          gpgconf --kill gpg-agent
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE }}" --output .github/sv-tools-bot.asc .github/sv-tools-bot.asc.gpg
          gpg --batch --yes --import .github/sv-tools-bot.asc
          rm .github/sv-tools-bot.asc
      - name: Docker Login Github
        run: >-
          echo "${{ secrets.BOT_TOKEN }}"
          | docker login -u sv-tools-bot --password-stdin docker.pkg.github.com
      - name: Docker Login Hub
        run: >-
          echo "${{ secrets.DOCKER_HUB_TOKEN }}"
          | docker login -u svtools --password-stdin
      - name: Install Snapcraft
        run: |
          sudo apt-get -yq --no-install-suggests --no-install-recommends install snapcraft
      - name: Snapcraft Login
        env:
          SNAPCRAFT_LOGIN: ${{ secrets.SNAPCRAFT_LOGIN }}
        run: |
          snapcraft login --with <(echo "$SNAPCRAFT_LOGIN")
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
