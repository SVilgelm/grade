name: Go

on:
  pull_request:
    branches:
      - master

env:
  LINT_VERSION: "v1.22.2"
  NANCY_VERSION: "v0.0.39"
jobs:
  tests:
    name: Style and Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Cache Tools
        id: cache-tools
        uses: actions/cache@v1
        with:
          path: ~/tools
          key: ${{ runner.os }}-tools-${LINT_VERSION}-${NANCY_VERSION}
      - name: Install Tools
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/tools
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b ~/tools ${LINT_VERSION}
          curl -L https://github.com/sonatype-nexus-community/nancy/releases/download/${NANCY_VERSION}/nancy-linux.amd64-${NANCY_VERSION} -o ~/tools/nancy
          chmod +x ~/tools/nancy
      - name: Update PATH
        run: echo "::add-path::~/tools"
      - name: Lint
        run: golangci-lint run ./...
      - name: Nancy
        run: nancy go.sum
      - name: Unit Tests
        run: go test -race ./...
  build:
    name: Test Benchmarks
    needs: tests
    runs-on: ubuntu-latest
    env:
      DATABASE: Grade
      COLLECTION: Bench
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Check out code
        uses: actions/checkout@v1
      - name: Run Benchmarks
        run: |
          go test -cpu 1,2 -run=XXX -bench=. -benchmem > bench.log
          cat bench.log
      - name: Build
        run: go build -o grade grade.go
      - name: Grade JSON
        run: >-
          ./grade
          --hardwareid="github/actions"
          --goversion="$(go version | cut -d' ' -f3-)"
          --revision="${{ github.sha }}"
          --timestamp="$(git log -1 --format=%ct)"
          --branch="${{ github.ref }}"
          < bench.log
      - name: Grade influx dry-run
        run: >-
          ./grade influx
          --connection-url=""
          --database="${DATABASE}"
          --measurement="${COLLECTION}"
          --hardwareid="github/actions"
          --goversion="$(go version | cut -d' ' -f3-)"
          --revision="${{ github.sha }}"
          --timestamp="$(git log -1 --format=%ct)"
          --branch="${{ github.ref }}"
          < bench.log
      - name: Run influxdb
        run: |
          docker run --name=influxdb -d -p 8086:8086 influxdb:latest
          sleep 5
          docker exec influxdb influx -execute "CREATE DATABASE ${DATABASE} WITH DURATION INF SHARD DURATION 90d"
      - name: Grade influx
        run: >-
          ./grade influx
          --connection-url="http://localhost:8086"
          --database="${DATABASE}"
          --measurement="${COLLECTION}"
          --hardwareid="github/actions"
          --goversion="$(go version | cut -d' ' -f3-)"
          --revision="${{ github.sha }}"
          --timestamp="$(git log -1 --format=%ct)"
          --branch="${{ github.ref }}"
          < bench.log
      - name: Check influxdb
        run: docker exec influxdb influx -database ${DATABASE} -execute "SELECT * FROM ${COLLECTION}" | grep Fib
      - name: Shutdown influxdb
        run: docker stop influxdb
